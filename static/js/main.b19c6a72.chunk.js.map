{"version":3,"sources":["services/jcardContext.js","components/Copyright.js","services/jcConfig.js","services/jcardApi.js","containers/SignIn.js","components/AppsDrawer.js","components/Card.js","containers/Main.js","services/jcardRouter.js","App.js","serviceWorker.js","index.js","assets/japan.svg"],"names":["AuthContext","React","createContext","Consumer","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Config","url","APIBASE_URL","BASENAME","loginUrl","username","passwd","a","axios","get","auth","password","result","data","token","urldata","headers","Accept","Authorization","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","authctx","useContext","useState","isSubmitting","isRemember","errmsg","sVal","setState","open","setOpen","handleChange","event","value","target","type","checked","id","handleClose","FormLogin","action","method","onSubmit","props","preventDefault","getToken","then","payload","isLocal","catch","err","console","log","message","statusText","className","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","FormControlLabel","control","Checkbox","Button","Container","component","maxWidth","CssBaseline","Avatar","Grid","container","item","Box","mt","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","toolBar","justifyContent","padding","mixins","toolbar","nested","paddingLeft","list","AppDrawer","expand","setExpand","onGetJCardHandler","localStorage","setItem","onGetCard","Drawer","ModalProps","keepMounted","IconButton","Divider","List","role","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","onKeyDown","disablePadding","card","minWidth","breakpoints","up","title","fontSize","vocabulary","pos","marginBottom","VoCard","Card","CardContent","gutterBottom","kanji","kana","english","CardActions","size","imageIcon","height","iconRoot","textAlign","marginRight","borderTop","divider","borderBottom","toolbarTitle","flex","copyright","MainContainer","drawerOpen","setDrawerOpen","cardvalue","setCardValue","currUrl","setCurrUrl","handleDrawerOpen","onGetCardData","getCardData","authstate","resp","useEffect","current","getItem","Fragment","Toolbar","Icon","root","src","JpnSvg","alt","noWrap","direction","xs","SwitchRoute","isAuthenticate","path","exact","to","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","authState","setAuthCtxState","sessionStorage","Provider","clear","children","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b19c6a72.chunk.js","sourcesContent":["import React from 'react';\nconst AuthContext = React.createContext({});\nexport const AuthCtxConsumer = AuthContext.Consumer;\n\n\nexport function AuthCtxProvider(props){\n  const [authState,setAuthCtxState] = React.useState({\n    isAuthenticate:false,\n    isLocal:true,\n    token:null\n  });\n\n  React.useEffect(\n    function(){\n      if(localStorage.getItem('token')){\n        setAuthCtxState({\n          isAuthenticate:true,\n          isLocal:true,\n          token:localStorage.getItem('token')\n        });\n      }else if(sessionStorage.getItem('token')){\n        setAuthCtxState({\n          isAuthenticate:true,\n          isLocal:false,\n          token:sessionStorage.getItem('token')\n        });\n      }\n\n    },[]\n  );\n\n  function stateAction(action){\n    switch(action.type){\n      case \"SIGNIN\" :\n        action.payload.isLocal ?\n          localStorage.setItem(\"token\",action.payload.token)\n          :\n          sessionStorage.setItem(\"token\",action.payload.token);\n          setAuthCtxState({\n            isAuthenticate:true,\n            isLocal:action.payload.isLocal,\n            token:action.payload.token\n          });\n      break;\n  \n      case \"SIGNOUT\":\n        authState.isLocal ? \n          localStorage.clear() : sessionStorage.clear();\n        setAuthCtxState({\n          isAuthenticate:false,\n          isLocal:true,\n          token:null\n        });\n      break;\n  \n      default:\n        return null;\n    }\n  }  \n  return(\n    <AuthContext.Provider\n      value={{\n        authstate:authState,\n        action: stateAction\n      }}    \n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContext;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://indrabagus.github.io\">\n        Digital Bagus\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}","// Constant for production / development process\n\nconst production = {\n  url:{\n    APIBASE_URL : 'https://qambing.com/rest-api/v0.1',\n    BASENAME : '/jpncardapp'\n  }\n};\n\nconst development = {\n  url:{\n    APIBASE_URL : 'http://192.168.0.40/rest-api/v0.1',\n    BASENAME : '/devbase'\n  }\n};\n\nexport const Config = process.env.NODE_ENV === 'development'? \n                      development : production","import axios from 'axios';\nimport {Config} from './jcConfig';\n\nexport const loginUrl = `${Config.url.APIBASE_URL}/login`;\n\nexport async function getToken(username,passwd){\n  const result = await axios.get(`${loginUrl}`,{\n    auth: {\n      username: username,\n      password: passwd\n    }\n  })\n  return result.data;\n}\n\nexport async function getCardData(token,urldata){\n  const result = await axios.get(`${Config.url.APIBASE_URL}`+urldata,{\n    headers:{\n      Accept:'application/json',\n      Authorization:'Token '+ token\n    }\n  });\n  return result.data;\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Copyright from '../components/Copyright';\nimport AuthContext from '../services/jcardContext';\nimport {getToken} from '../services/jcardApi';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(){\n  const classes = useStyles();\n  const authctx = React.useContext(AuthContext);\n  const [sVal,setState] = React.useState({\n    username:'',\n    password:'',\n    isSubmitting:false,\n    isRemember:true,\n    errmsg:null    \n  });\n\n  const [open, setOpen] = React.useState(false);  \n\n  function handleChange(event){\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n    const id = event.target.id;\n    setState({\n      ...sVal,\n      [id]:value,\n    });\n  }\n\n  function OnSignIn(props){\n    props.preventDefault();\n    getToken(sVal.username,sVal.password)\n    .then((result) => {\n      authctx.action({\n        type:\"SIGNIN\",\n          payload:{\n          isLocal:sVal.isRemember,\n          token:result.token\n        }\n      });\n    })\n    .catch(err=>{\n      console.log(\"ERROR=>\",err);\n      setState({\n        ...sVal,\n        errmsg: err.message||err.statusText\n      });\n      setOpen(true);\n    });\n\n\n  }\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };  \n\n  const FormLogin = (\n    <form action=\"/\" method=\"GET\" onSubmit={OnSignIn} className={classes.form} noValidate>\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"Username\"\n        autoComplete=\"username\"\n        autoFocus\n        value={sVal.username}\n        id=\"username\"\n        onChange={handleChange}\n      />\n      <TextField \n        variant=\"outlined\"\n        margin=\"normal\"\n        id=\"password\"\n        type=\"password\"\n        label=\"Password\"\n        autoComplete=\"current-password\"\n        required\n        fullWidth\n        onChange={handleChange}\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            type=\"checkbox\" \n            checked = {sVal.isRemember}\n            id=\"isRemember\" \n            color=\"primary\" \n            onChange={handleChange} \n          />\n        }\n        label=\"Remember me\"\n      />\n      <Button\n        className={classes.submit}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n      >\n        Sign In\n      </Button>\n    </form>\n    \n  );\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        { FormLogin }\n      <Grid container>\n        <Grid item>\n          <Link href=\"#\" variant=\"body2\">\n            {\"Contact Email: indra.bagus@gmail.com\"}\n          </Link>\n        </Grid>\n      </Grid>\n        \n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Error Notification !\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Error Message: {sVal.errmsg}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n    </Container>\n  );\n}\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport LockIcon from '@material-ui/icons/Lock';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport ClassIcon from '@material-ui/icons/Class';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\n\nimport AuthContext from '../services/jcardContext'\n\nconst useStyles = makeStyles((theme)=>({\n  toolBar : {\n    display:'flex',\n    alignItems:'centre',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0,1),\n    ...theme.mixins.toolbar    \n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n\n  list:{\n    width:250\n  },\n}));\n\nexport default function AppDrawer(props){\n  const classes = useStyles();\n  const authctx = React.useContext(AuthContext);\n  const [expand, setExpand] = React.useState(false);\n\n  function onGetJCardHandler(url){\n    localStorage.setItem('current-url',url); // save the url to local storage\n    props.onGetCard(url);\n  }\n  return(\n    <Drawer\n      variant=\"temporary\"\n      open={props.open}\n      onClose={props.onClose}\n      ModalProps={{\n        keepMounted: true, // Better open performance on mobile.\n      }}\n    >\n      <div className={classes.toolBar}>\n        <IconButton onClick={props.onClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider/>\n      <List \n        className={classes.list}\n        role=\"presentation\"\n\n      >\n      <ListItem button onClick={()=>(setExpand(!expand))}>\n        <ListItemIcon>\n          <FormatListBulletedIcon/>\n        </ListItemIcon>\n        <ListItemText primary=\"Genki Book\" />\n        {expand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={expand} timeout=\"auto\" unmountOnExit>\n        <List\n          onClick={props.onClose}\n          onKeyDown={props.onClose} \n          component=\"div\" disablePadding\n        >\n          <ListItem \n            button \n            className={classes.nested}\n            onClick={()=>onGetJCardHandler(\"/genki/random/1\")}\n          >\n            <IconButton> <ClassIcon/> </IconButton>\n            <ListItemText primary=\"Genki Book Vol 1\"/>\n          </ListItem>\n\n          <ListItem \n            button \n            className={classes.nested}\n            onClick={()=>onGetJCardHandler(\"/genki/random/2\")}\n          >\n            <IconButton> <ClassIcon/> </IconButton>            \n            <ListItemText primary=\"Genki Book Vol 2\"/>\n          </ListItem>\n        </List>\n      </Collapse>\n\n        <ListItem button onClick={()=>authctx.action({type:\"SIGNOUT\"})}>\n          <ListItemIcon><LockIcon/></ListItemIcon>\n          <ListItemText primary=\"Sign Out\"/>\n        </ListItem>\n        \n      </List>\n    </Drawer>\n  );\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme)=>({\n  card : {\n    maxWidth:400,\n    minWidth:290,\n    [theme.breakpoints.up('sm')]: {\n      maxWidth:600,      \n      minWidth:600,\n    },\n    \n    [theme.breakpoints.up('md')]: {\n      maxWidth:1024,      \n      minWidth:800,\n    },\n\n    borderRadius:10,\n  },\n  title: {\n    fontSize:'1rem',\n    [theme.breakpoints.up('sm')]: {\n      fontSize:'2rem',\n    }    \n  },\n\n  vocabulary : {\n    fontSize:'1.5rem',\n    [theme.breakpoints.up('md')]: {\n      fontSize:'4rem',\n    }\n  },\n\n  pos: {\n    // fontSize:22,\n    marginBottom:theme.spacing(2),\n  },\n}));\n\nexport default function VoCard(props){\n  const classes = useStyles();\n  return(\n    <Card className={classes.card} >\n      <CardContent onClick={props.onGetCard}>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Vocabulary Card\n        </Typography>\n        <Typography className={classes.vocabulary} >\n          { props.data.kanji ? props.data.kanji:props.data.kana}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {/* If it's not kanji write unicode 'space' (\\u00a0) instead */}\n          { props.data.kanji ? '[ '+props.data.kana+' ]':\"\\u00a0\"} \n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          \"{props.data.english}\"\n          {/* <br />\n          <br />\n          e.g: {'\"図書館で勉強するができます。\"'} */}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button \n          size=\"medium\"\n          onClick={props.onGetCard}\n        >\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport AppDrawer from '../components/AppsDrawer';\nimport VoCard from '../components/Card';\nimport {getCardData} from '../services/jcardApi';\nimport AuthContext from '../services/jcardContext';\nimport Copyright from '../components/Copyright';\nimport JpnSvg from '../assets/japan.svg';\n\nconst useStyles = makeStyles((theme)=>({\n\n  imageIcon: {\n    height: '100%'\n  },\n  iconRoot: {\n    textAlign: 'center',\n    marginRight:theme.spacing(1),\n  },\n\n  toolbar:{\n    marginTop : theme.spacing(2),\n    marginBottom:theme.spacing(5),\n    borderTop : `1px solid ${theme.palette.divider}`,\n    borderBottom:`1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex:1,\n    fontSize:'1rem',\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '2rem',\n    },    \n  },\n\n  card : {\n    marginTop : theme.spacing(1),\n    display:'flex',\n    alignItems:'centre',\n    justifyContent: 'flex-end',\n  },\n  copyright :{\n    marginTop:theme.spacing(3)\n  }\n}));\n\nexport default function MainContainer(props) {\n  const classes = useStyles();\n  const [drawerOpen,setDrawerOpen]=React.useState(false);\n  const [cardvalue,setCardValue] = React.useState({});\n  const [currUrl,setCurrUrl]=React.useState();\n  const authctx = React.useContext(AuthContext);\n  function handleDrawerOpen(){\n    setDrawerOpen(!drawerOpen);\n  }\n\n  /* Get Card data from the backend */\n  function onGetCardData(url){\n    getCardData(authctx.authstate.token,url)\n    .then((resp)=>{\n      setCardValue(resp.result);\n    })\n    .catch((err)=>{\n      console.log(\"ERROR :\",err);\n    });\n  }\n\n  React.useEffect(function(){\n    let current = localStorage.getItem('current-url');\n    if(!current){\n      current='/genki/random/1'\n      localStorage.setItem('current-url',current);\n    }\n    setCurrUrl(current);\n    onGetCardData(current);    \n  },[]);\n\n  return(\n    <React.Fragment>\n    <Container maxWidth='lg'>\n      <Toolbar className={classes.toolbar}>\n        <IconButton onClick={handleDrawerOpen}>\n          <MenuIcon/>\n        </IconButton>\n        <Icon classes={{root: classes.iconRoot}}>\n          <img\n            src={JpnSvg}\n            className={classes.imageIcon}\n            alt=\"\"\n          />\n        </Icon>\n        <Typography \n          className={classes.toolbarTitle}\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          noWrap\n        >\n          Japan Card Application\n        </Typography>\n      </Toolbar>\n      <AppDrawer\n        open={drawerOpen}\n        onClose={handleDrawerOpen}\n        onGetCard={onGetCardData}        \n      />\n      <Grid  \n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        // justify=\"center\"\n        // style={{ minHeight: '100vh' }} \n      >\n        <Grid item xs={12}>\n        <VoCard \n          data={cardvalue}\n          onGetCard={()=>onGetCardData(currUrl)}\n        />\n        </Grid>\n\n      </Grid>\n      <div className={classes.copyright}>\n        <Copyright/>\n      </div>\n    </Container>\n    </React.Fragment>\n  );\n};\n\n","import React from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport AuthContext from './jcardContext';\nimport SignIn from '../containers/SignIn';\nimport MainContainer from '../containers/Main';\n\nexport default function SwitchRoute(){\n  const context = React.useContext(AuthContext);\n  if(context.authstate.isAuthenticate ===false){\n    return(\n      <Switch>\n        <Route path=\"/\" exact component={SignIn} />\n        <Route>\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    );\n  }else{\n    return(\n      <Switch>\n        <Route path=\"/\" exact component={MainContainer}/>\n        <Route>\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n\n    );\n  }\n\n}","import React from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport SwitchRoute from './services/jcardRouter';\nimport {Config} from './services/jcConfig';\nfunction App() {\n\n  return (\n    <Router basename={Config.url.BASENAME}>\n      <SwitchRoute/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {AuthCtxProvider} from './services/jcardContext';\n\nReactDOM.render(\n<AuthCtxProvider>\n  <App />\n</AuthCtxProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/japan.29f79c14.svg\";"],"sourceRoot":""}