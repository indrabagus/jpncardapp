{"version":3,"sources":["services/jcardContext.js","components/Copyright.js","services/jcConfig.js","services/jcardApi.js","containers/SignIn.js","components/AppsDrawer.js","components/Card.js","containers/Main.js","services/jcardRouter.js","App.js","serviceWorker.js","index.js","assets/japan.svg"],"names":["AppContext","React","createContext","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Config","url","APIBASE_URL","BASENAME","loginUrl","username","passwd","a","axios","get","auth","password","result","data","token","urldata","headers","Accept","Authorization","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","appctx","useContext","useState","isSubmitting","isRemember","errmsg","sVal","setState","open","setOpen","asGuest","setAsGuest","handleChange","event","value","target","type","checked","id","handleClose","FormLogin","action","method","onSubmit","props","preventDefault","getToken","then","payload","isLocal","catch","err","console","log","prevState","message","statusText","className","noValidate","TextField","disabled","required","fullWidth","label","autoComplete","autoFocus","onChange","FormControlLabel","control","Checkbox","Button","Container","component","maxWidth","CssBaseline","Avatar","Grid","container","item","Box","mt","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","toolBar","justifyContent","padding","mixins","toolbar","nested","paddingLeft","list","AppDrawer","expand","setExpand","itemstyle","paddingTop","paddingBottom","height","onGetJCardHandler","title","currUrl","cardTitle","onGetCard","Drawer","ModalProps","keepMounted","IconButton","Divider","List","dense","role","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","onKeyDown","disablePadding","style","card","minWidth","breakpoints","down","up","fontSize","vocabulary","pos","marginBottom","VoCard","Card","CardContent","gutterBottom","kanji","kana","english","CardActions","size","imageIcon","iconRoot","textAlign","marginRight","paddingRight","borderTop","divider","borderBottom","toolbarTitle","flex","copyright","MainContainer","drawerOpen","setDrawerOpen","cardvalue","setCardValue","handleDrawerOpen","onGetCardData","getCardData","state","resp","response","status","useEffect","JCAppBar","Toolbar","Icon","root","src","JpnSvg","alt","noWrap","direction","xs","SwitchRoute","isAuthenticate","path","exact","to","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","appState","setAppState","localStorage","getItem","sessionStorage","setItem","Provider","clear","children","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c306badb.chunk.js","sourcesContent":["import React from 'react';\nconst AppContext = React.createContext({});\n\n\nexport function AppCtxProvider(props){\n  const [appState,setAppState] = React.useState({\n    isAuthenticate:false,\n    isLocal:true,\n    token:null,\n    currUrl:null,\n    cardTitle:null\n  });\n\n  React.useEffect(\n    function(){\n      if(localStorage.getItem('token')){\n        setAppState(prevState=> {\n          return {\n            ...prevState,\n            isAuthenticate:true,\n            isLocal:true,\n            token:localStorage.getItem('token'),\n          }});\n      }else if(sessionStorage.getItem('token')){\n        setAppState(prevState=>{\n          return {\n            ...prevState,\n            isAuthenticate:true,\n            isLocal:false,\n            token:sessionStorage.getItem('token'),\n          }});\n      }\n      let url = localStorage.getItem('current-url');\n      let title = localStorage.getItem('current-title');\n      if(!url){\n        localStorage.setItem('current-url','/genki/random/1');\n        url = '/genki/random/1';\n      }\n      if(!title){\n        title= 'Genki Volume 1 Card';\n        localStorage.setItem('current-title',title);\n      }\n      setAppState(prevState=>{\n        return {\n          ...prevState,\n          currUrl:url,\n          cardTitle:title\n        }});\n\n    },[]\n  );\n\n  function stateAction(action){\n    switch(action.type){\n      case \"SIGNIN\" :\n        action.payload.isLocal ?\n          localStorage.setItem(\"token\",action.payload.token)\n          :\n          sessionStorage.setItem(\"token\",action.payload.token);\n          setAppState(prevState=>{\n            return{\n              ...prevState,\n              isAuthenticate:true,\n              isLocal:action.payload.isLocal,\n              token:action.payload.token,\n          }});\n      break;\n  \n      case \"SIGNOUT\":\n        appState.isLocal ? \n          localStorage.clear() : sessionStorage.clear();\n        setAppState(prevState=>{\n          return {\n            ...prevState,\n            isAuthenticate:false,\n            isLocal:true,\n            token:null,\n        }});\n      break;\n\n      case \"CHANGECARD\":\n        setAppState(prevState=>{\n          return{\n            ...prevState,\n            currUrl:action.payload.currUrl,\n            cardTitle:action.payload.cardTitle\n        }});\n        localStorage.setItem('current-url',action.payload.currUrl);\n        localStorage.setItem('current-title',action.payload.cardTitle);\n      break;\n  \n      default:\n        return null;\n    }\n  }  \n  return(\n    <AppContext.Provider\n      value={{\n        state:appState,\n        action: stateAction\n      }}    \n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n}\n\nexport default AppContext;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://indrabagus.github.io\">\n        Digital Bagus\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}","// Constant for production / development process\n\nconst production = {\n  url:{\n    APIBASE_URL : 'https://qambing.com/rest-api/v0.1',\n    BASENAME : '/jpncardapp'\n  }\n};\n\nconst development = {\n  url:{\n    APIBASE_URL : 'http://192.168.0.40/rest-api/v0.1',\n    BASENAME : '/devbase'\n  }\n};\n\nexport const Config = process.env.NODE_ENV === 'development'? \n                      development : production","import axios from 'axios';\nimport {Config} from './jcConfig';\n\nexport const loginUrl = `${Config.url.APIBASE_URL}/login`;\n\nexport async function getToken(username,passwd){\n  const result = await axios.get(`${loginUrl}`,{\n    auth: {\n      username: username,\n      password: passwd\n    }\n  })\n  return result.data;\n}\n\nexport async function getCardData(token,urldata){\n  const result = await axios.get(`${Config.url.APIBASE_URL}`+urldata,{\n    headers:{\n      Accept:'application/json',\n      Authorization:'Token '+ token\n    }\n  });\n  return result.data;\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Copyright from '../components/Copyright';\nimport AppContext from '../services/jcardContext';\nimport {getToken} from '../services/jcardApi';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(){\n  const classes = useStyles();\n  const appctx = React.useContext(AppContext);\n  const [sVal,setState] = React.useState({\n    username:'guest',\n    password:'kumamoto',\n    isSubmitting:false,\n    isRemember:true,\n    errmsg:null    \n  });\n  // State for opening dialog\n  const [open, setOpen] = React.useState(false);\n\n  // State for login as guest or not\n  const [asGuest,setAsGuest] = React.useState(true);\n\n  function handleChange(event){\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n    const id = event.target.id;\n    setState({\n      ...sVal,\n      [id]:value,\n    });\n  }\n\n  function OnSignIn(props){\n    props.preventDefault();\n    getToken(sVal.username,sVal.password)\n    .then((result) => {\n      appctx.action({\n        type:\"SIGNIN\",\n          payload:{\n          isLocal:sVal.isRemember,\n          token:result.token\n        }\n      });\n    })\n    .catch(err=>{\n      console.log(\"ERROR=>\",err);\n      setState( prevState=>{\n        return{\n          ...prevState,\n          errmsg: err.message||err.statusText\n      }});\n      setOpen(true);\n    });\n\n\n  }\n  const handleClose = () => {\n    setOpen(false);\n  };  \n\n  const FormLogin = (\n    <form action=\"/\" method=\"GET\" onSubmit={OnSignIn} className={classes.form} noValidate>\n      <TextField\n        disabled={asGuest}\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"Username\"\n        autoComplete=\"username\"\n        autoFocus\n        value={sVal.username}\n        id=\"username\"\n        onChange={handleChange}\n      />\n      <TextField\n        disabled={asGuest}\n        variant=\"outlined\"\n        margin=\"normal\"\n        id=\"password\"\n        type=\"password\"\n        label=\"Password\"\n        autoComplete=\"current-password\"\n        required\n        fullWidth\n        onChange={handleChange}\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            disabled={asGuest}\n            type=\"checkbox\" \n            checked = {sVal.isRemember}\n            id=\"isRemember\" \n            color=\"primary\" \n            onChange={handleChange} \n          />\n          \n        }\n        label=\"Remember me\"\n      />\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            type=\"checkbox\" \n            checked = {sVal.isRemember}\n            id=\"isRemember\" \n            color=\"primary\" \n            onChange={ ()=>(setAsGuest(!asGuest)) } \n          />\n        }\n        label=\"Login as guest\"\n      />\n\n\n      <Button\n        className={classes.submit}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n      >\n        Sign In\n      </Button>\n    </form>\n    \n  );\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        { FormLogin }\n      <Grid container>\n        <Grid item>\n          <Link href=\"mailto:indra.bagus@gmail.com\" variant=\"body2\">\n            {\"Contact: indra.bagus@gmail.com\"}\n          </Link>\n        </Grid>\n      </Grid>\n        \n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Error Notification !\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Error Message: {sVal.errmsg}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n    </Container>\n  );\n}\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport LockIcon from '@material-ui/icons/Lock';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport ClassIcon from '@material-ui/icons/Class';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\n\nimport AppContext from '../services/jcardContext'\n\nconst useStyles = makeStyles((theme)=>({\n  toolBar : {\n    display:'flex',\n    alignItems:'centre',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0,1),\n    ...theme.mixins.toolbar    \n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n\n  list:{\n    width:250\n  },\n}));\n\nexport default function AppDrawer(props){\n  const classes = useStyles();\n  const appctx = React.useContext(AppContext);\n  const [expand, setExpand] = React.useState(false);\n  const itemstyle = {\n    paddingTop:1,\n    paddingBottom:1,\n    height:'42px',\n  }\n  function onGetJCardHandler(url,title){\n    // save all to the app context\n    appctx.action({\n      type:\"CHANGECARD\",\n      payload:{\n        currUrl : url,\n        cardTitle:title\n      }\n    });\n    props.onGetCard();\n  }\n  return(\n    <Drawer\n      variant=\"temporary\"\n      open={props.open}\n      onClose={props.onClose}\n      ModalProps={{\n        keepMounted: true, // Better open performance on mobile.\n      }}\n    >\n      <div className={classes.toolBar}>\n        <IconButton onClick={props.onClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider/>\n      <List \n        dense\n        className={classes.list}\n        role=\"presentation\"\n\n      >\n      <ListItem button onClick={()=>(setExpand(!expand))}>\n        <ListItemIcon>\n          <FormatListBulletedIcon/>\n        </ListItemIcon>\n        <ListItemText primary=\"Genki Book\" />\n        {expand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={expand} timeout=\"auto\" unmountOnExit>\n        <List dense\n          onClick={props.onClose}\n          onKeyDown={props.onClose} \n          component=\"div\" disablePadding\n        >\n          <ListItem\n            style={itemstyle} \n            button \n            className={classes.nested}\n            onClick={()=>onGetJCardHandler(\"/genki/random/1\",\"Genki Volume 1\")}\n          >\n            <IconButton> <ClassIcon/> </IconButton>\n            <ListItemText primary=\"Genki Book Vol 1\"/>\n          </ListItem>\n\n          <ListItem\n            style={itemstyle}\n            button \n            className={classes.nested}\n            onClick={()=>onGetJCardHandler(\"/genki/random/2\",\"Genki Volume 2\")}\n          >\n            <IconButton> <ClassIcon/> </IconButton>\n            <ListItemText primary=\"Genki Book Vol 2\"/>\n          </ListItem>\n        </List>\n      </Collapse>\n\n        <ListItem button onClick={()=>appctx.action({type:\"SIGNOUT\"})}>\n          <ListItemIcon><LockIcon/></ListItemIcon>\n          <ListItemText primary=\"Sign Out\"/>\n        </ListItem>\n        \n      </List>\n    </Drawer>\n  );\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme)=>({\n  card : {\n    maxWidth:290,\n    minWidth:290,\n    [theme.breakpoints.down('sm')]: {\n      maxWidth:600,      \n      minWidth:600,\n    },\n    \n    [theme.breakpoints.up('md')]: {\n      maxWidth:1024,      \n      minWidth:800,\n    },\n\n    borderRadius:10,\n  },\n\n  title: {\n    fontSize:'1rem',\n    [theme.breakpoints.up('sm')]: {\n      fontSize:'2rem',\n    }    \n  },\n\n  vocabulary : {\n    fontSize:'1.5rem',\n    [theme.breakpoints.up('md')]: {\n      fontSize:'4rem',\n    }\n  },\n\n  pos: {\n    // fontSize:22,\n    marginBottom:theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      fontSize:'1.5rem',\n    }\n  },\n}));\n\nexport function ErrorCard(props){\n\n}\n\nexport default function VoCard(props){\n  const classes = useStyles();\n  return(\n    <Card className={classes.card} >\n      <CardContent onClick={props.onGetCard}>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {props.title}\n        </Typography>\n        <Typography className={classes.vocabulary} >\n          { props.data.kanji ? props.data.kanji:props.data.kana}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {/* If it's not kanji write unicode 'space' (\\u00a0) instead */}\n          { props.data.kanji ? '[ '+props.data.kana+' ]':\"\\u00a0\"} \n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          \"{props.data.english}\"\n          {/* <br />\n          <br />\n          e.g: {'\"図書館で勉強するができます。\"'} */}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button \n          size=\"medium\"\n          onClick={props.onGetCard}\n        >\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport AppDrawer from '../components/AppsDrawer';\nimport VoCard from '../components/Card';\nimport {getCardData} from '../services/jcardApi';\nimport AppContext from '../services/jcardContext';\nimport Copyright from '../components/Copyright';\nimport JpnSvg from '../assets/japan.svg';\n\nconst useStyles = makeStyles((theme)=>({\n\n  imageIcon: {\n    height: '100%'\n  },\n  iconRoot: {\n    textAlign: 'center',\n    marginRight:theme.spacing(1),\n  },\n\n  toolbar:{\n    paddingLeft:theme.spacing(1),\n    paddingRight:theme.spacing(1),\n    marginTop : theme.spacing(2),\n    marginBottom:theme.spacing(5),\n    borderTop : `1px solid ${theme.palette.divider}`,\n    borderBottom:`1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex:1,\n    fontSize:'1rem',\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '2rem',\n    },    \n  },\n\n  card : {\n    marginTop : theme.spacing(1),\n    display:'flex',\n    alignItems:'centre',\n    justifyContent: 'flex-end',\n  },\n  copyright :{\n    marginTop:theme.spacing(3)\n  }\n}));\n\nexport default function MainContainer(props) {\n  const classes = useStyles();\n  const [drawerOpen,setDrawerOpen]=React.useState(false);\n  const [cardvalue,setCardValue] = React.useState({});\n  const appctx = React.useContext(AppContext);\n  function handleDrawerOpen(){\n    setDrawerOpen(!drawerOpen);\n  }\n\n  /* Get Card data from the backend */\n  function onGetCardData(){\n    getCardData(appctx.state.token,appctx.state.currUrl)\n    .then((resp)=>{\n      setCardValue(resp.result);\n    })\n    .catch((err)=>{\n      if(err.response){\n        console.log(\"RESP:\",err.response);\n        if(err.response.status === 401){\n          appctx.action({type:\"SIGNOUT\"});\n        }\n      }\n      else{\n        console.log(\"ERROR :\",err);\n      }\n    });\n  }\n\n  React.useEffect(onGetCardData,[]);\n\n  const JCAppBar = (\n    <Toolbar className={classes.toolbar}>\n    <IconButton\n      style={{ backgroundColor: 'transparent',marginRight:'15px' }}\n      onClick={handleDrawerOpen}>\n      <MenuIcon/>\n    </IconButton>\n    <Icon classes={{root: classes.iconRoot}}>\n      <img\n        src={JpnSvg}\n        className={classes.imageIcon}\n        alt=\"\"\n      />\n    </Icon>\n    <Typography \n      className={classes.toolbarTitle}\n      component=\"h2\"\n      variant=\"h5\"\n      color=\"inherit\"\n      noWrap\n    >\n      Japan Card Application\n    </Typography>\n  </Toolbar>\n  );\n\n  return(\n    <Container maxWidth='lg'>\n      { JCAppBar }\n      <AppDrawer\n        open={drawerOpen}\n        onClose={handleDrawerOpen}\n        onGetCard={onGetCardData}\n      />\n      <Grid  \n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        // justify=\"center\"\n        // style={{ minHeight: '100vh' }} \n      >\n        <Grid item xs={12}>\n        <VoCard \n          data={cardvalue}\n          title={appctx.state.cardTitle}\n          onGetCard={onGetCardData}\n        />\n        </Grid>\n\n      </Grid>\n      <div className={classes.copyright}>\n        <Copyright/>\n      </div>\n    </Container>\n  );\n};\n\n","import React from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport AppContext from './jcardContext';\nimport SignIn from '../containers/SignIn';\nimport MainContainer from '../containers/Main';\n\nexport default function SwitchRoute(){\n  const context = React.useContext(AppContext);\n  if(context.state.isAuthenticate ===false){\n    return(\n      <Switch>\n        <Route path=\"/\" exact component={SignIn} />\n        <Route>\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    );\n  }else{\n    return(\n      <Switch>\n        <Route path=\"/\" exact component={MainContainer}/>\n        <Route>\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n\n    );\n  }\n\n}","import React from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport SwitchRoute from './services/jcardRouter';\nimport {Config} from './services/jcConfig';\nfunction App() {\n\n  return (\n    <Router basename={Config.url.BASENAME}>\n      <SwitchRoute/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {AppCtxProvider} from './services/jcardContext';\n\nReactDOM.render(\n<AppCtxProvider>\n  <App />\n</AppCtxProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/japan.29f79c14.svg\";"],"sourceRoot":""}