{"version":3,"sources":["Constant.js","Context.js","components/home.js","components/contacts.js","components/login.js","components/vocabularycard.js","components/logout.js","components/notfound.js","Route.js","App.js","serviceWorker.js","index.js"],"names":["config","url","API_URL","AuthContext","React","createContext","AuthProvider","Provider","AuthConsumer","Consumer","Home","props","state","isAuthenticate","className","token","to","Component","Contacts","contacts","this","contact_title","map","contact","name","email","company","catchPhrase","fetch","then","res","json","data","setState","catch","console","log","LoginBox","handleInputChange","event","value","target","type","checked","onSubmit","preventDefault","isSubmitting","axios","get","auth","username","usrname","password","status","context","action","payload","isLocal","isRemember","err","errmsg","message","statusText","window","open","placeholder","onChange","required","defaultChecked","htmlFor","contextType","Login","ContentCard","kanji","vocab","isShow","kana","cardbox","cardTitle","english","onClick","handleClick","handleShow","VocabularyCard","getData","apiUrl","headers","Accept","Authorization","result","response","request","prevProps","Logout","useContext","path","exact","component","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","stateAction","localStorage","setItem","clear","getItem","basename","process","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe4656f7.chunk.js","sourcesContent":["// Constant for production / development process\n\nconst production = {\n  url:{\n    API_URL : 'https://206.189.47.248:7878/api/v0.1'\n  }\n};\n\nconst development = {\n  url:{\n    API_URL : 'https://192.168.0.40/api/v0.1'\n  }\n};\n\nexport const config = process.env.NODE_ENV === 'development'? \n                      development : production","import React from 'react';\n\nconst AuthContext = React.createContext({});\nexport const AuthProvider = AuthContext.Provider;\nexport const AuthConsumer = AuthContext.Consumer;\n\nexport default AuthContext;\n","import React,{Component} from \"react\";\nimport {Redirect} from 'react-router-dom';\nimport \"./css/Home.css\";\nimport {AuthConsumer} from \"../Context\";\n\nexport default class Home extends Component{\n  render(){\n    return(\n      <AuthConsumer>\n       {(props) => {\n          return props.state.isAuthenticate ?\n            <div className=\"Home\"> \n            <div className=\"lander\">\n              <h1>This is the empty main container</h1>\n              <p>A simple main container with app token: {props.state.token}</p>\n            </div>\n            </div>\n          : \n            <Redirect to=\"/login\"/>\n          }\n        }\n      </AuthConsumer>\n\n    );\n  }\n}","import React, {Component} from 'react'\n\n// const Contacts = ({contacts}) => {\n//   return(\n//     <div>\n//       <centre><h1>Contact List</h1></centre>\n//       {contacts.map((contact) => (\n//         <div className=\"card\">\n//           <div className=\"card-body\">\n//             <h5 className=\"card-title\">{contact.name}</h5>\n//             <h6 className=\"card-subtitle mb-2 text-muted\">{contact.email}</h6>\n//             <p className=\"card-text\">{contact.company.catchPhrase}</p>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   )\n// };\n\nclass Contacts extends Component {\n  render(){\n    return(\n    <div>\n      <h1>{this.props.contact_title}</h1>\n      {this.state.contacts.map((contact) => (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{contact.name}</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">{contact.email}</h6>\n            <p className=\"card-text\">{contact.company.catchPhrase}</p>\n          </div><span/>\n        </div>\n      ))}\n    </div>      \n    );\n  }\n  state={\n    contacts: []\n  };\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then( res=>res.json())\n      .then((data)=>{\n        this.setState({contacts:data})\n      })\n      .catch(console.log)\n  }  \n};\n\nexport default Contacts","import React,{Component} from 'react';\nimport axios from 'axios';\nimport './css/Login.css';\nimport {config} from '../Constant';\nimport AuthContext from '../Context';\n\nclass LoginBox extends Component{\n  constructor(props){\n    super(props);\n    this.url=config.url.API_URL+'/login'\n    this.state={\n      usrname : '',\n      password:'',\n      isSubmitting:false,\n      isRemember:true,\n      errmsg:null\n    }\n  }\n\n  static contextType = AuthContext;\n\n  handleInputChange = (event) => {\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n  \n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.setState({isSubmitting:true});\n    axios.get(this.url,{\n        auth: {\n          username: this.state.usrname,\n          password: this.state.password\n        },\n      }).then(data => {\n          if(data.status===200){\n            this.context.action({\n              type:'LOGIN',\n              payload:{\n                isLocal: this.state.isRemember,\n                token:data.data.token\n              }\n            });\n          }\n        })\n        .catch(err=>{\n          console.log(\"Error: \",err);\n          this.setState({isSubmitting:false,errmsg:err.message||err.statusText});\n          if(err.message === \"Network Error\"){\n            window.open(config.url.API_URL+\"/about\",\"_blank\");\n          }\n\n        });\n  }\n\n  render(){\n    return(\n      <div className=\"login-page\">\n        <div className=\"row\">\n          <div className=\"col-0 col-sm-0\"></div>\n          <div className=\"col-12 col-sm-5\">\n            <div className=\"login-box card\">\n          <div className=\"card-header\">\n            <h3>Sign In</h3>\n\t\t\t  \t    <div className=\"d-flex justify-content-end social_icon\">\n\t\t\t  \t\t  <span><i className=\"fab fa-facebook-square\"></i></span>\n\t\t\t  \t\t  <span><i className=\"fab fa-google-plus-square\"></i></span>\n\t\t\t  \t\t  <span><i className=\"fab fa-twitter-square\"></i></span>\n\t\t\t  \t  </div>\n            <div className=\"card-body\">\n\t\t\t  \t    <form onSubmit={this.onSubmit}>\n\t\t\t  \t\t    <div className=\"input-group form-group\">\n\t\t\t  \t\t\t    <div className=\"input-group-prepend\">\n\t\t\t  \t\t\t\t  <span className=\"input-group-text\"><i className=\"fas fa-user\"></i></span>\n\t\t\t  \t\t\t  </div>\n                  <input  \n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"usrname\"\n                    placeholder=\"Enter Username\"\n                    value={this.state.usrname}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n\t\t\t\t\t      </div>\n\n\t\t\t\t\t      <div className=\"input-group form-group\">\n\t\t\t\t\t    \t  <div className=\"input-group-prepend\">\n\t\t\t\t\t    \t\t  <span className=\"input-group-text\"><i className=\"fas fa-key\"></i></span>\n\t\t\t\t\t    \t  </div>\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Password\"\n                    value={this.state.password}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n\t\t\t\t\t      </div>\n\t\t\t\t\t      <div className=\"row align-items-center remember\">\n                  <input  type=\"checkbox\"\n                          defaultChecked=\"true\"\n                          name = \"isRemember\"\n                          checked={this.isRemember}\n                          onChange={this.handleInputChange}/>\n                  <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Remember Me</label>\n\t\t\t\t\t      </div>\n\t\t\t\t\t      <div className=\"form-group\">\n\t\t\t\t\t\t      <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn\"/>\n\t\t\t\t\t      </div>\n\t\t\t\t    </form>\n          </div>\n          </div>\n        </div>\n          </div>\n          <div className=\"col-0 col-sm-7\"></div>\n        </div>\n        {this.state.errmsg && \n        <div className=\"row\"> <p>Error: {this.state.errmsg}</p></div>\n        }\n      </div>\n    );\n  }\n}\n\nclass Login extends Component {\n  render(){\n    return(\n      <LoginBox/>\n    );\n  }\n}\n\nexport default Login","import React,  {Component} from 'react';\nimport axios from 'axios';\nimport AuthContext from \"../Context\";\nimport \"./css/VocabularyCard.css\"\n\nconst ContentCard = (props)=>{\n  let kanji;\n  if(props.state.vocab.kanji){\n    kanji = <div><h2>{props.state.vocab.kanji}</h2>\n            { props.state.isShow ?\n              <p>&#123;{props.state.vocab.kana}&#125;</p>\n              :\n              <p>\t&ensp;</p>\n            }\n            </div>\n\n  }else{\n    kanji = <div><h2>{props.state.vocab.kana}</h2>\n            <p>\t&ensp;</p>\n            </div>\n  }\n  let cardbox = <div className=\"card-box card\">\n                  <div className=\"card-header\">\n                    <div>{props.cardTitle}</div>\n                  </div>\n                  <div className=\"card-body\">\n                    {kanji}\n                    { props.state.isShow ?\n                      <p>English: {props.state.vocab.english}</p>\n                      :\n                      <p>\t&ensp;</p>\n                    }\n                  </div>\n                  <div className=\"card-footer\">\n                    <button type=\"button\" \n                          className=\"btn float-right btn-primary\" \n                          // onKeyPress = {this.handleKeyPress}\n                          onClick={props.handleClick}>\n                      Next >>\n                    </button>\n                    <button type=\"button\" \n                          className=\"btn float-left btn-primary\" \n                          // onKeyPress = {this.handleKeyPress}\n                          onClick={props.handleShow}>\n                      {\n                        props.state.isShow ?\n                        \"Hide English\"\n                        :\n                        \"Show English\"\n\n                      }\n                    </button>                    \n                </div>\n              </div>\n  return(\n    <div className=\"genki-book container\">\n    {props.state.errmsg ? <p>Error: {props.state.errmsg}</p>:\n    <div className=\"row\">\n      <div className=\"col-0 col-sm-0\"></div>\n      <div className=\"col-12 col-sm-6\">\n        {cardbox}\n      </div>\n      <div className=\"col-0 col-sm-6\"></div>\n    </div>\n    }\n    </div>\n  );\n}\n\n\nclass VocabularyCard extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      vocab:[],\n      isShow:false,\n      errmsg:null\n    }\n  } \n\n  static contextType = AuthContext;\n\n  handleClick = () => { \n    this.setState({isShow:false});\n    this.getData(); \n  }\n\n  // handleKeyPress = (event) => {\n  //   console.log(\"LOG\",event.charCode);\n  //   this.handleClick();\n  // }\n  \n  async getData(){\n    await axios.get(this.props.apiUrl,{\n      headers:{\n        Accept:'application/json',\n        Authorization:'Token '+ this.context.state.token\n      },\n    })\n    .then( data => {\n      this.setState({vocab:data.data.result});\n    })\n    .catch(err=>{\n      console.log(\"error: \",err);\n      if (err.response){\n        this.setState({errmsg:err.response.status||err.response.data});\n      }else if(err.request){\n        this.setState({errmsg:err.request});\n      }else{\n        this.setState({errmsg:err.message});\n      }\n      return null;\n    })\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.apiUrl !== prevProps.apiUrl)\n      this.getData();\n  }\n\n  componentDidMount(){\n    this.getData();\n  }\n\n  render(){\n    // if (this.state.vocab.length === 0){\n    //   TODO: Waiting animation or something\n    // }\n\n    return(\n      <ContentCard \n        cardTitle={this.props.cardTitle}\n        state={this.state} \n        handleClick={this.handleClick}\n        handleShow={()=>{this.setState({isShow:!this.state.isShow})}}\n      />\n    );\n  }\n\n \n\n}\n\nexport default VocabularyCard;\n","import React, {useContext} from 'react';\nimport AuthContext from \"../Context\";\nimport {Redirect} from 'react-router-dom';\n\nconst Logout = (props) => {\n  const authContext = useContext(AuthContext);\n  authContext.action({type:\"LOGOUT\"});\n  return (\n    <Redirect to=\"/\"/>\n  );\n}\n\nexport default Logout;","import React from \"react\";\nimport \"./css/NotFound.css\";\n\nexport default () =>\n  <div className=\"NotFound\">\n    <h3>Page Not Found, Sorry :(</h3>\n  </div>","import React, { useContext } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { config } from './Constant'\nimport Home from \"./components/home\";\nimport Contacts from \"./components/contacts\";\nimport Login from \"./components/login\";\nimport VocabularyCard from \"./components/vocabularycard\";\nimport Logout from \"./components/logout\"\nimport NotFound from \"./components/notfound\";\nimport AuthContext from \"./Context\";\n\nexport default () => {\n  const cntx = useContext(AuthContext);\n  if (cntx.state.isAuthenticate === false) {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={Login} />\n        <Route>\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    );\n  } else {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/logout\" exact component={Logout} />\n        \n        <Route path=\"/jlpt4\" >\n          <VocabularyCard\n            apiUrl={config.url.API_URL + '/jlpt4/random'}\n            cardTitle=\"JLPT N4 Card\"\n          />\n        </Route>\n        \n        <Route path=\"/genkibook1\">\n          <VocabularyCard\n            apiUrl={config.url.API_URL + '/genki/random/1'}\n            cardTitle=\"Genki Book Volume 1 Card\"\n          />\n        </Route>\n\n        <Route path=\"/genkibook2\">\n          <VocabularyCard\n            apiUrl={config.url.API_URL + '/genki/random/2'}\n            cardTitle=\"Genki Book Volume 2 Card\"\n          />\n        </Route>\n        \n        <Route path=\"/contacts\">\n          <Contacts contact_title=\"Contact Lists\" />\n          }\n        </Route>\n        <Route component={NotFound} />\n      </Switch>\n    );\n  }\n}\n","import React , {Component} from 'react';\nimport {BrowserRouter as Router, Link } from \"react-router-dom\";\nimport SwitchRoutes from \"./Route\";\nimport {AuthProvider} from \"./Context\";\nimport './App.css';\n// import NavigationBars from './components/navigationbars';\n\nconst NavBar = (props)=>{\n  return(\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n      <Link className=\"navbar-brand\" to=\"/\">Digital Bagus</Link>\n      <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#main-menu\"\n        aria-controls=\"main-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      {props.state.isAuthenticate &&\n\n        <div className=\"collapse navbar-collapse\" id=\"main-menu\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"><Link className=\"nav-link\" to=\"/\">Home<span className=\"sr-only\">(current)</span></Link></li>\n            <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"><Link className=\"nav-link\" to=\"/jlpt4\">JLPT N4</Link></li>\n            <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"><Link className=\"nav-link\" to=\"/genkibook1\">Genki Book Volume 1</Link></li>\n            <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n              <Link className=\"nav-link\" to=\"/genkibook2\">Genki Book Volume 2</Link>\n            </li>\n          </ul>\n\n\n          <ul className=\"navbar-nav navbar-right mr-auto\">\n            <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"><Link className=\"nav-link\" to=\"/logout\">Logout</Link></li>\n            <li className=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\"><Link className=\"nav-link\" to=\"/contacts\">Contacts</Link></li>\n          </ul>\n\n        </div>\n      }\n    </nav>\n\n)}\n\n\nexport default class App extends Component{\n  constructor(props){\n    super(props);\n    let token = localStorage.getItem('token');\n    if(token){\n      this.state = {\n        isAuthenticate:true,\n        token:localStorage.getItem('token')\n      };\n    }    \n\n  }\n\n  \n  state = {\n    isAuthenticate: false,\n    isLocal : true,\n    token : null\n  }\n\n  stateAction = (action) => {\n    switch(action.type){\n      case \"LOGIN\" :\n        if(action.payload.isLocal){\n          localStorage.setItem(\"token\",action.payload.token);\n        }\n        this.setState({\n            isAuthenticate:true,\n            isLocal:action.payload.isLocal,\n            token:action.payload.token\n          });\n      break;\n\n      case \"LOGOUT\":\n        localStorage.clear();\n        this.setState({\n          isAuthenticate:false,\n          isLocal:true,\n          token:null\n        });\n      break;\n\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    return (\n      <AuthProvider\n        value={{\n          state: this.state,\n          action: this.stateAction\n        }}\n      >\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App container\">\n          <NavBar state={this.state}/>\n          <SwitchRoutes/>\n        </div>\n      </Router>\n      </AuthProvider>\n    );\n  }\n\n\n\n}\n\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}