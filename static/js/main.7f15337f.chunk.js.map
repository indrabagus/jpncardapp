{"version":3,"sources":["Constant.js","components/home.js","components/contacts.js","components/login.js","components/vocabularycard.js","components/notfound.js","Route.js","App.js","serviceWorker.js","index.js"],"names":["config","url","API_URL","Home","className","Component","Contacts","state","contacts","this","props","contact_title","map","contact","class","name","email","company","catchPhrase","fetch","then","res","json","data","setState","catch","console","log","LoginBox","handleInputChange","event","value","target","type","checked","onSubmit","preventDefault","isSubmitting","axios","get","headers","Accept","auth","username","usrname","password","status","isRemember","localStorage","setItem","token","sessionStorage","err","errmsg","message","statusText","placeholder","onChange","required","defaultChecked","for","Login","ContentCard","kanji","vocab","kana","cardbox","cardTitle","english","onClick","handleClick","VocabularyCard","getData","apiUrl","Authorization","getItem","result","response","prevProps","path","exact","component","NotFound","NavBar","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Route","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f15337f.chunk.js","sourcesContent":["// Constant for production / development process\n\nconst production = {\n  url:{\n    API_URL : 'https://206.189.47.248:7878/api/v0.1'\n  }\n};\n\nconst development = {\n  url:{\n    API_URL : 'https://192.168.0.40/api/v0.1'\n  }\n};\n\nexport const config = process.env.NODE_ENV === 'development'? \n                      development : production","import React,{Component} from \"react\";\nimport \"./css/Home.css\";\n\nexport default class Home extends Component{\n  render(){\n    return(\n      <div className=\"Home\">\n        <div className=\"lander\">\n          <h1>This is the empty main container</h1>\n          <p>A simple main container</p>\n        </div>\n      </div>\n    );\n  }\n}","import React, {Component} from 'react'\n\n// const Contacts = ({contacts}) => {\n//   return(\n//     <div>\n//       <centre><h1>Contact List</h1></centre>\n//       {contacts.map((contact) => (\n//         <div class=\"card\">\n//           <div class=\"card-body\">\n//             <h5 class=\"card-title\">{contact.name}</h5>\n//             <h6 class=\"card-subtitle mb-2 text-muted\">{contact.email}</h6>\n//             <p class=\"card-text\">{contact.company.catchPhrase}</p>\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   )\n// };\n\nclass Contacts extends Component {\n  render(){\n    return(\n    <div>\n      <h1>{this.props.contact_title}</h1>\n      {this.state.contacts.map((contact) => (\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{contact.name}</h5>\n            <h6 class=\"card-subtitle mb-2 text-muted\">{contact.email}</h6>\n            <p class=\"card-text\">{contact.company.catchPhrase}</p>\n          </div><span/>\n        </div>\n      ))}\n    </div>      \n    );\n  }\n  state={\n    contacts: []\n  };\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then( res=>res.json())\n      .then((data)=>{\n        this.setState({contacts:data})\n      })\n      .catch(console.log)\n  }  \n};\n\nexport default Contacts","import React,{Component} from 'react';\nimport axios from 'axios';\nimport './css/Login.css';\nimport {config} from '../Constant'\n\nclass LoginBox extends Component{\n  constructor(props){\n    super(props);\n    this.url=config.url.API_URL+'/login'\n    this.state={\n      usrname : '',\n      password:'',\n      isSubmitting:false,\n      isRemember:true,\n      errmsg:null\n    }\n  }\n\n  handleInputChange = (event) => {\n    //const { value, name } = event.target;\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.setState({isSubmitting:true});\n      axios.get(this.url,{\n        headers:{\n          Accept:'application/json'\n        },\n        auth: {\n          username: this.state.usrname,\n          password: this.state.password\n        }\n      }).then(data => {\n          if(data.status===200){\n            this.state.isRemember ? \n              localStorage.setItem('token',data.data.token):\n              sessionStorage.setItem('token',data.data.token);\n          }\n        })\n        .catch(err=>{\n          console.log(err);\n          this.setState({isSubmitting:false,errmsg:err.message||err.statusText});\n\n        });\n  }\n\n  render(){\n    return(\n      <div className=\"login-page\">\n        <div class=\"login-box card\">\n          <div class=\"card-header\">\n            <h3>Sign In</h3>\n\t\t\t  \t    <div class=\"d-flex justify-content-end social_icon\">\n\t\t\t  \t\t  <span><i class=\"fab fa-facebook-square\"></i></span>\n\t\t\t  \t\t  <span><i class=\"fab fa-google-plus-square\"></i></span>\n\t\t\t  \t\t  <span><i class=\"fab fa-twitter-square\"></i></span>\n\t\t\t  \t  </div>\n            <div class=\"card-body\">\n\t\t\t  \t    <form onSubmit={this.onSubmit}>\n\t\t\t  \t\t    <div class=\"input-group form-group\">\n\t\t\t  \t\t\t    <div class=\"input-group-prepend\">\n\t\t\t  \t\t\t\t  <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n\t\t\t  \t\t\t  </div>\n                  <input  \n                    type=\"text\"\n                    class=\"form-control\"\n                    name=\"usrname\"\n                    placeholder=\"Enter Username\"\n                    value={this.state.usrname}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n\t\t\t\t\t      </div>\n\n\t\t\t\t\t      <div class=\"input-group form-group\">\n\t\t\t\t\t    \t  <div class=\"input-group-prepend\">\n\t\t\t\t\t    \t\t  <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n\t\t\t\t\t    \t  </div>\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    class=\"form-control\"\n                    placeholder=\"Enter Password\"\n                    value={this.state.password}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n\t\t\t\t\t      </div>\n\t\t\t\t\t      <div class=\"row align-items-center remember\">\n                  <input  type=\"checkbox\"\n                          defaultChecked=\"true\"\n                          name = \"isRemember\"\n                          checked={this.isRemember}\n                          onChange={this.handleInputChange}/>\n                  <label class=\"form-check-label\" for=\"exampleCheck1\">Remember Me</label>\n\t\t\t\t\t      </div>\n\t\t\t\t\t      <div class=\"form-group\">\n\t\t\t\t\t\t      <input type=\"submit\" value=\"Login\" class=\"btn float-right login_btn\"/>\n\t\t\t\t\t      </div>\n\t\t\t\t    </form>\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Login extends Component {\n  render(){\n    return(\n      <LoginBox/>\n    );\n  }\n}\nexport default Login","import React,  {Component} from 'react';\nimport axios from 'axios';\nimport \"./css/VocabularyCard.css\"\n\nconst ContentCard = (props)=>{\n  let kanji;\n  if(props.state.vocab.kanji){\n    kanji = <div><h3>{props.state.vocab.kanji}</h3>\n            <h4>&#123;{props.state.vocab.kana}&#125;</h4></div>\n\n  }else{\n    kanji = <div><h3>{props.state.vocab.kana}</h3>\n            <h4>&#123;&#125;</h4>\n            </div>\n  }\n  let cardbox = <div class=\"card-box card\">\n                <div class=\"card-header\">\n                  <div>{props.cardTitle}</div>\n                  <div class=\"card-body\">\n                    {kanji}\n                    <div>English: {props.state.vocab.english}</div>\n                  </div>\n                </div>\n                <div class=\"card-footer\">\n                  <button type=\"button\" \n                          class=\"btn float-right btn-primary\" \n                          // onKeyPress = {this.handleKeyPress}\n                          onClick={props.handleClick}>\n                      Next >></button>\n                </div>\n                </div>\n  return(\n    <div class=\"genki-book container\">\n    {props.state.errmsg ? <p>Error: {props.state.errmsg}</p>:\n    <div class=\"row\">\n      <div class=\"col-sm-2\"></div>\n      <div class=\"col-sm-8\">\n        {cardbox}\n      </div>\n      <div class=\"col-sm-2\"></div>      \n    </div>\n    }\n    </div>\n  );\n}\n\n\nclass VocabularyCard extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      vocab:[],\n      errmsg:null\n    }\n  }  \n  handleClick = () => { this.getData(); }\n\n  // handleKeyPress = (event) => {\n  //   console.log(\"LOG\",event.charCode);\n  //   this.handleClick();\n  // }\n  \n  async getData(){\n    await axios.get(this.props.apiUrl,{\n      headers:{\n        Accept:'application/json',\n        Authorization:'Token '+localStorage.getItem('token')\n      },\n    })\n    .then( data => {\n      this.setState({vocab:data.data.result});\n    })\n    .catch(err=>{\n      console.log(\"ErrorCard: \",err);\n      this.setState({errmsg:err.response});\n      return null;\n    })\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.apiUrl !== prevProps.apiUrl)\n      this.getData();\n  }\n\n  componentDidMount(){\n    this.getData();\n  }\n\n  render(){\n    // if (this.state.vocab.length === 0){\n    //   TODO: Waiting animation or something\n    // }\n\n    return(\n      <ContentCard \n        cardTitle={this.props.cardTitle}\n        state={this.state} \n        handleClick={this.handleClick}/>\n    );\n  }\n\n \n\n}\n\nexport default VocabularyCard;\n","import React from \"react\";\nimport \"./css/NotFound.css\";\n\nexport default () =>\n  <div className=\"NotFound\">\n    <h3>Page Not Found, Sorry :(</h3>\n  </div>","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport {config} from './Constant'\nimport Home from \"./components/home\";\nimport Contacts from \"./components/contacts\";\nimport Login from \"./components/login\";\n// import JLPT4 from \"./components/jlpt4\";\nimport VocabularyCard from \"./components/vocabularycard\";\nimport NotFound from \"./components/notfound\";\nexport default() =>\n  <Switch>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/login\" exact component={Login} />\n    <Route path=\"/jlpt4\" >\n      <VocabularyCard \n          apiUrl={config.url.API_URL+'/jlpt4/random'}\n          cardTitle=\"JLPT N4 Card\"\n      />\n    </Route>\n    <Route path=\"/genkibook\">\n      <VocabularyCard \n        apiUrl={config.url.API_URL+'/genki/random/1'}\n        cardTitle=\"Genki Book Volume 1 Card\"\n      />\n    </Route>\n    <Route path=\"/contacts\">\n      <Contacts contact_title=\"Contact Lists\"/>\n    </Route>\n    <Route component={NotFound}/>\n  </Switch>;","import React , {Component} from 'react';\nimport {BrowserRouter as Router, Link} from \"react-router-dom\";\nimport './App.css';\nimport RoutesSwitch from \"./Route\";\n\nconst NavBar = (props)=>{\n  return(\n    <Router>\n      <div className=\"App container\">\n        <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n          <Link class=\"navbar-brand\" to=\"/\">Digital Bagus</Link>\n          <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#main-menu\"\n      aria-controls=\"main-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n          <div class=\"collapse navbar-collapse\" id=\"main-menu\">\n            <ul class=\"navbar-nav mr-auto\">\n              <li class=\"nav-item\"><Link class=\"nav-link\" to=\"/\">Home<span class=\"sr-only\">(current)</span></Link></li>\n              <li class=\"nav-item\"><Link class=\"nav-link\" to=\"/jlpt4\">JLPT N4</Link></li>            \n              <li class=\"nav-item\"><Link class=\"nav-link\" to=\"/genkibook\">Genki Book</Link></li>\n          </ul>\n          <ul class=\"navbar-nav navbar-right mr-auto\">\n            <li class=\"nav-item\"><Link class=\"nav-link\" to=\"/login\">Login</Link></li>\n            {props.contacts && (\n              <li class=\"nav-item\"><Link class=\"nav-link\" to={props.contacts}>Contacts</Link></li>\n            )}\n          </ul>\n          </div>\n        </nav>\n    <RoutesSwitch/>\n  </div>\n    </Router> \n)}\n\nclass App extends Component{\n  // constructor(props){\n  //   super(props);\n  // }\n  render(){\n    return(\n      <NavBar\n        contacts=\"/contacts\" \n      />\n    );\n  }\n\n\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}